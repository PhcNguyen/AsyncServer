
# Copyright (C) PhcNguyen Developers
# Distributed under the terms of the Modified BSD License.

import typing


class AlgorithmTypes:
    @staticmethod
    def generate_id(string: str) -> str:...
    def handle_data(self, client_address: tuple, data: dict) -> bytes:...


class NetworksTypes:
    def __init__(
        self, 
        host: str, 
        port: int, 
        handle_data: typing.Callable[[tuple, bytes], bytes]
    ): ...
    def _notify(self, message):...
    def _notify_error(self, message):...
    def set_message_callback(self, callback):...
    def start(self):...
    def accept_connections(self):...
    def handle_client(self, client_socket, client_address: tuple):...
    def stop(self):...
    

class DBManager:
    def __init__(self, db_path: str) -> None: ...
    async def _initialize_database(self): ...
    def _notify(self, message: str): ...
    def _notify_error(self, message: str): ...
    async def _connection(self): ...
    async def _close(self): ...
    async def _create_tables(self) -> bool: ...
    def set_message_callback(self, callback): ...
    async def insert_account(self, username: str, password: str, ip_address: str) -> bool: ...
    async def login(self, username: str, password: str) -> bool: ...
    async def get_player_coin(self, name: str) -> typing.Optional[int]: ...